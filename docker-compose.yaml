version: "3.9"
services:
  zookeeper-1:
    container_name: zookeeper-1
    image: aimvector/zookeeper:3.4.0
    build:
      context: kafka
      dockerfile: ../dockerfiles/ZookeeperDockerfile
    volumes:
      - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
      - ./data/zookeeper-1/:/tmp/zookeeper/
    networks:
      - kafka
  kafka-1:
    container_name: kafka-1
    image: aimvector/kafka:3.4.0
    build: 
      context: kafka
      dockerfile: ../dockerfiles/KafkaDockerfile
    volumes:
      - ./config/kafka-1/server.properties:/kafka/config/server.properties
      - ./data/kafka-1/:/tmp/kafka-logs/
    ports:
      - "5000:5000"
    networks:
      - kafka
  kafka-producer:
    container_name: kafka-producer
    image: aimvector/kafka:3.4.0
    build: 
      context: .
    working_dir: /kafka
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - kafka
  kafka-consumer:
    container_name: kafka-consumer
    image: aimvector/kafka:3.4.0
    build: 
      context: .
    working_dir: /kafka
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - kafka
  kafka-ui: 
    container_name: kakfa-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8081"
    env_file:
      - env/kafkaui.env
    networks:
      - kafka
networks: 
  kafka:
    name: kafka